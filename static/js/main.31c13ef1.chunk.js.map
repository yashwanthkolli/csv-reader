{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","headings","setHeadings","columns","setColumns","file","setFile","useEffect","columnsArray","length","push","title","field","slice","forEach","heading","searchable","console","log","className","cssClass","cssInputClass","cssLabelClass","parserOptions","header","onFileLoaded","fileInfo","Object","keys","name","options","search","paging","pageSize","pageSizeOptions","headerStyle","backgroundColor","color","fontWeight","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAgEeA,MA3Df,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACPC,EADO,KACDC,EADC,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGiBJ,mBAAS,IAH1B,mBAGNK,EAHM,KAGGC,EAHH,OAIWN,mBAAS,IAJpB,mBAINO,EAJM,KAIAC,EAJA,KAsBb,OAhBAC,qBAAU,WACR,IAAMC,EAAe,GAClBP,EAASQ,SACVD,EAAaE,KAAK,CAACC,MAAOV,EAAS,GAAIW,MAAOX,EAAS,KACvDA,EAASY,MAAM,EAAGZ,EAASQ,OAAO,GAAGK,SAAQ,SAAAC,GAC3CP,EAAaE,KAAK,CAACC,MAAOI,EAASH,MAAOG,EAASC,YAAY,OAEjEZ,EAAWI,MAEZ,CAACP,IAIJgB,QAAQC,IAAIf,GAIV,sBAAKgB,UAAU,MAAf,UACE,cAAC,IAAD,CACEC,SAAS,YACTC,cAAc,SACdC,cAAc,QACdC,cAAe,CAAEC,QAAQ,GACzBC,aAAc,SAAC1B,EAAM2B,GACnB1B,EAAQD,GACRG,EAAYyB,OAAOC,KAAK7B,EAAK,KAC7BO,EAAQoB,MAIZ,qBAAKP,UAAU,kBAAf,SACE,cAAC,IAAD,CACER,MAAON,EAAKwB,KAAOxB,EAAKwB,KAAO,MAC/B1B,QAASA,EACTJ,KAAMA,EACN+B,QAAS,CACPC,QAAQ,EACRC,QAAQ,EACRC,SAAU,EACVC,gBAAgB,CAAC,EAAE,GAAG,GAAG,GAAG,KAC5BC,YAAa,CACXC,gBAAiB,UACjBC,MAAO,OACPC,WAAY,OACZC,SAAU,iBC3CTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31c13ef1.chunk.js","sourcesContent":["import './App.css';\r\nimport CSVReader from 'react-csv-reader'\r\nimport MaterialTable from 'material-table';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n  const[data, setData] = useState([])\r\n  const [headings, setHeadings] = useState([])\r\n  const [columns, setColumns] = useState([])\r\n  const [file, setFile] = useState({})\r\n\r\n  useEffect(() => {\r\n    const columnsArray = []\r\n    if(headings.length){\r\n      columnsArray.push({title: headings[0], field: headings[0]})\r\n      headings.slice(1, headings.length-1).forEach(heading => {\r\n        columnsArray.push({title: heading, field: heading, searchable: false})\r\n      });\r\n      setColumns(columnsArray)\r\n    }\r\n  }, [headings])\r\n\r\n  \r\n    \r\n  console.log(columns)\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <CSVReader\r\n        cssClass='container'\r\n        cssInputClass='button'\r\n        cssLabelClass='label'\r\n        parserOptions={{ header: true }}\r\n        onFileLoaded={(data, fileInfo) => {\r\n          setData(data)\r\n          setHeadings(Object.keys(data[0]))\r\n          setFile(fileInfo)\r\n        }}\r\n      />\r\n      \r\n      <div className='table-container'>\r\n        <MaterialTable\r\n          title={file.name ? file.name : 'CSV'}\r\n          columns={columns}\r\n          data={data}        \r\n          options={{\r\n            search: true,\r\n            paging: true,\r\n            pageSize: 5,\r\n            pageSizeOptions:[5,10,20,50,100],\r\n            headerStyle: {\r\n              backgroundColor: '#01579b',\r\n              color: '#FFF',\r\n              fontWeight: 'bold',\r\n              fontSize: '16px'\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}